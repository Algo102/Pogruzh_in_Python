# –§—É–Ω–∫—Ü–∏—è map(function, iterable)

texts = ["–ü—Ä–∏–≤–µ—Ç", "–ó–î–û–†–û–í–ê", "–ø—Ä–∏–≤–µ–¢—Å—Ç–≤—É—é"]
res = map(lambda x: x.lower(), texts)
print(*res) # –ø—Ä–∏–≤–µ—Ç –∑–¥–æ—Ä–æ–≤–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é. * —á—Ç–æ–± –≤—ã–≤–µ–ª –∫–∞–∂–¥—ã–π —ç–ª–µ–º–µ–Ω—Ç –æ–±—ä–µ–∫—Ç–∞ map

# –§—É–Ω–∫—Ü–∏—è filter(function, iterable)
numbers = [42, -73, 1024]
res = tuple(filter(lambda x: x > 0, numbers))
print(res) # * –Ω–µ –ø–∏—Å–∞–ª, —Ç.–∫. –≤—ã–≤–æ–¥–∏–º –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –æ–¥–Ω–∏–º –∫–æ—Ä—Ç–µ–∂–æ–º

# –§—É–Ω–∫—Ü–∏—è zip(*iterables, strict=False)
# —à–∞–≥–∏ –æ—Ç—Å—á–∏—Ç—ã–≤–∞—é—Ç—Å—è –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É —ç–ª–µ–º–µ–Ω–æ–≤ –≤ —Å–∞–º–æ–º –∫–æ—Ä–æ—Ç–∫–æ–º —Å–ø–∏—Å–∫–µ
names = ["–ò–≤–∞–Ω", "–ù–∏–∫–æ–ª–∞–π", "–ü—ë—Ç—Ä"]
salaries = [125_000, 96_000, 109_000]
awards = [0.1, 0.25, 0.13, 0.99]
for name, salary, award in zip(names, salaries, awards):
    print(f'{name} –∑–∞—Ä–∞–±–æ—Ç–∞–ª {salary:.2f} –¥–µ–Ω–µ–≥ –∏ –ø—Ä–µ–º–∏—é {salary* award:.2f}')

# –§—É–Ω–∫—Ü–∏—è max() –∏ min()
# max(iterable, *[, key, default]) –∏–ª–∏ max(arg1, arg2, *args[, key])
lst_1 = []
lst_2 = [42, 256, 73]
lst_3 = [("–ò–≤–∞–Ω", 125_000), ("–ù–∏–∫–æ–ª–∞–π", 96_000), ("–ü—ë—Ç—Ä", 109_000)]
print(max(lst_1, default='empty')) # –≤–º–µ—Å—Ç–æ empty –º–æ–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å –¥—Ä—É–≥–æ–µ, —á—Ç–æ–± –Ω–µ –±—ã–ª–æ –æ—à–∏–±–æ–∫ –Ω–∞ —Å–ª—É—á–∞–π –µ—Å–ª–∏ —Å–ø–∏—Å–æ–∫ –ø—É—Å—Ç–æ–π
print(max(*lst_2)) # * —Ä–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ—Ç –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Å–ø–∏—Å–∫–∞
print(max(lst_3, key=lambda x: x[1])) # –±–µ–∂–∏–º –ø–æ –∫–ª—é—á–∞–º, –∏—â–µ–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ, –æ–±—Ä–∞—â–∞—è—Å—å –∫ –∏–Ω–¥–µ–∫—Å—É 1

# –§—É–Ω–∫—Ü–∏—è sum()
# sum(iterable, /, start=0) - –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é  —Å—Ç–∞—Ä—Ç = 0
my_list = [42, 256, 73]
print(sum(my_list))
print(sum(my_list, start=1024)) # start –∑–∞–¥–∞—ë—Ç –Ω–∞—á–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è —Å—É–º–º–∏—Ä–æ–≤–∞–Ω–∏—è


# –§—É–Ω–∫—Ü–∏—è all()
# –∏—Å—Ç–∏–Ω–∞, –µ—Å–ª–∏ –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ —è–≤–ª—è—é—Ç—Å—è –∏—Å—Ç–∏–Ω–æ–π
numbers = [42, -73, 1024]
if all(map(lambda x: x > 0, numbers)):
    print('–í—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–µ')
else:
    print('–í –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –µ—Å—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–µ –∏/–∏–ª–∏ –Ω—É–ª–µ–≤—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã')

# –§—É–Ω–∫—Ü–∏—è any()
# –∏—Å—Ç–∏–Ω–∞, –µ—Å–ª–∏ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω —ç–ª–µ–º–µ–Ω—Ç –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ - –∏—Å—Ç–∏–Ω–∞
numbers = [42, -73, 1024]
if any(map(lambda x: x > 0, numbers)):
    print('–•–æ—Ç—è –±—ã –æ–¥–∏–Ω —ç–ª–µ–º–µ–Ω—Ç –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π')
else:
    print('–í—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –Ω–µ –±–æ–ª—å—à–µ –Ω—É–ª—è')

# –§—É–Ω–∫—Ü–∏—è chr()
# –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫–æ–≤–æ–π —Å–∏–º–≤–æ–ª –∏–∑ —Ç–∞–±–ª–∏—Ü—ã –Æ–Ω–∏–∫–æ–¥ –ø–æ –µ–≥–æ –Ω–æ–º–µ—Ä—É. –ù–æ–º–µ—Ä - —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ –æ—Ç 0 –¥–æ 1_114_111.
print(chr(97)) # a
print(chr(1105)) # —ë
print(chr(128519)) # üòá

# –§—É–Ω–∫—Ü–∏—è ord()
# –ü—Ä–∏–Ω–∏–º–∞–µ—Ç –æ–¥–∏–Ω —Å–∏–º–≤–æ–ª –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –µ–≥–æ –∫–æ–¥ –≤ —Ç–∞–±–ª–∏—Ü–µ –Æ–Ω–∏–∫–æ–¥
print(ord('a')) # 97
print(ord('–∞')) # 1072
print(ord('üòâ')) # 128521

# –§—É–Ω–∫—Ü–∏—è locals()
# –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª–æ–≤–∞—Ä—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –∏–∑ –ª–æ–∫–∞–ª—å–Ω–æ–π –æ–±–ª–∞—Å—Ç–∏ –≤–∏–¥–∏–º–æ—Å—Ç–∏ –Ω–∞ –º–æ–º–µ–Ω—Ç –≤—ã–∑–æ–≤–∞ —Ñ—É–Ω–∫—Ü–∏–∏.
# –ù–µ –≤–∏–¥–∏—Ç –Ω–∏ –∫–æ–Ω—Å—Ç–∞–Ω—Ç—É, —Ç.–∫. –æ–Ω–∞ –Ω–µ –ª–æ–∫–∞–ª—å–Ω–∞—è –∏ –Ω–µ z, —Ç.–∫. –æ–Ω–∞ –Ω–∏–∂–µ
SIZE = 10
def func(a, b, c):
    x = a + b
    print(locals())
    z = x + c
    return z
func(1, 2, 3) # {'a': 1, 'b': 2, 'c': 3, 'x': 3}


# –§—É–Ω–∫—Ü–∏—è globals()
# –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª–æ–≤–∞—Ä—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –∏–∑ –≥–ª–æ–±–∞–ª—å–Ω–æ–π –æ–±–ª–∞—Å—Ç–∏ –≤–∏–¥–∏–º–æ—Å—Ç–∏
# –ï—Å–ª–∏ –≤—ã–∑–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é locals() –∏–∑ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∫–æ–¥–∞ –º–æ–¥—É–ª—è, –∞ –Ω–µ
# –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏, —Ä–µ–∑—É–ª—å—Ç–∞—Ç –±—É–¥–µ—Ç –∞–Ω–∞–ª–æ–≥–∏—á–µ–Ω —Ä–∞–±–æ—Ç–µ —Ñ—É–Ω–∫—Ü–∏–∏ globals()
# –í –æ—Ç–ª–∏—á–∏–∏ –æ—Ç locals —Å–ª–æ–≤–∞—Ä—å globals –ø–æ–∑–≤–æ–ª—è–µ—Ç –∏–∑–º–µ–Ω–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π
SIZE = 10
def func(a, b, c):
    x = a + b
    print(globals())
    z = x + c
    return z
print(globals())

# –∏–∑–º–µ–Ω—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ
x = 42
glob_dict = globals() # –ø–æ–º–µ—â–∞–µ–º —Å–ª–æ–≤–∞—Ä—å –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
glob_dict['x'] = 73
print(x) # 73

# –§—É–Ω–∫—Ü–∏—è vars()
# –ë–µ–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç –∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ —Ñ—É–Ω–∫—Ü–∏–∏ locals(). –ï—Å–ª–∏ –ø–µ—Ä–µ–¥–∞—Ç—å –≤ vars
# –æ–±—ä–µ–∫—Ç, —Ñ—É–Ω–∫—Ü–∏—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –µ–≥–æ –∞—Ç—Ä–∏–±—É—Ç,–µ—Å–ª–∏ –Ω–µ—Ç –∞—Ç—Ä–∏–±—É—Ç–∞ —É –æ–±—ä–µ–∫—Ç–∞, —Ç–æ TypeError.
print(vars(int)) # –ü–æ–ª—É—á–∏–ª–∏ –≤—Å–µ –¥–∞–Ω–¥–µ—Ä –º–µ—Ç–æ–¥—ã –∫–ª–∞—Å—Å–∞ int


# –ü—Ä–æ–≤–µ—Ä–∫–∞
data = [25, -42, 146, 73, -100, 12]
print(list(map(str, data))) # ['25', '-42', '146', '73', '-100', '12']
print(max(data, key=lambda x: -x)) # -100
print(*filter(lambda x: not x[0].startswith('__'), globals().items())) # ('data', [25, -42, 146, 73, -100, 12])